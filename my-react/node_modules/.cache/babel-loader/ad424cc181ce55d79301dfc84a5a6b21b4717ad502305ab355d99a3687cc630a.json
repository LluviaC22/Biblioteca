{"ast":null,"code":"var _jsxFileName = \"C:\\\\Biblioteca P\\xFAblica\\\\my-react\\\\src\\\\components\\\\Gestion.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\"; // Para obtener el parámetro de la URL\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Gestion = () => {\n  _s();\n  const {\n    id_reserva\n  } = useParams(); // Obtener la ID de la reserva de la URL\n  const [estado, setEstado] = useState('');\n\n  // Función para actualizar el estado de la reserva\n  const handleActualizarEstado = async nuevoEstado => {\n    try {\n      const response = await axios.put(`http://localhost:8000/reservas/${id_reserva}/estado`, {\n        estado: nuevoEstado\n      }, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      alert(response.data.message);\n    } catch (error) {\n      alert('Error al actualizar el estado de la reserva');\n    }\n  };\n  useEffect(() => {\n    // Puedes cargar los datos de la reserva si es necesario\n  }, [id_reserva]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Gestionar Reserva\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleActualizarEstado('Aprobada'),\n      children: \"Aprobar Reserva\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleActualizarEstado('Rechazada'),\n      children: \"Rechazar Reserva\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(Gestion, \"UtnY67W+35eILPo04vG60UHsHf4=\", false, function () {\n  return [useParams];\n});\n_c = Gestion;\nexport default Gestion;\nvar _c;\n$RefreshReg$(_c, \"Gestion\");","map":{"version":3,"names":["React","useState","useEffect","useParams","axios","jsxDEV","_jsxDEV","Gestion","_s","id_reserva","estado","setEstado","handleActualizarEstado","nuevoEstado","response","put","headers","Authorization","localStorage","getItem","alert","data","message","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Biblioteca Pública/my-react/src/components/Gestion.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\"; // Para obtener el parámetro de la URL\r\nimport axios from 'axios';\r\n\r\nconst Gestion = () => {\r\n  const { id_reserva } = useParams();  // Obtener la ID de la reserva de la URL\r\n  const [estado, setEstado] = useState('');\r\n\r\n  // Función para actualizar el estado de la reserva\r\n  const handleActualizarEstado = async (nuevoEstado) => {\r\n    try {\r\n      const response = await axios.put(\r\n        `http://localhost:8000/reservas/${id_reserva}/estado`,\r\n        { estado: nuevoEstado },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n          },\r\n        }\r\n      );\r\n      alert(response.data.message);\r\n    } catch (error) {\r\n      alert('Error al actualizar el estado de la reserva');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Puedes cargar los datos de la reserva si es necesario\r\n  }, [id_reserva]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Gestionar Reserva</h2>\r\n      <button onClick={() => handleActualizarEstado('Aprobada')}>Aprobar Reserva</button>\r\n      <button onClick={() => handleActualizarEstado('Rechazada')}>Rechazar Reserva</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Gestion;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB,CAAC,CAAC;AAC9C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM;IAAEC;EAAW,CAAC,GAAGN,SAAS,CAAC,CAAC,CAAC,CAAE;EACrC,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;;EAExC;EACA,MAAMW,sBAAsB,GAAG,MAAOC,WAAW,IAAK;IACpD,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAC9B,kCAAkCN,UAAU,SAAS,EACrD;QAAEC,MAAM,EAAEG;MAAY,CAAC,EACvB;QACEG,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QACxD;MACF,CACF,CAAC;MACDC,KAAK,CAACN,QAAQ,CAACO,IAAI,CAACC,OAAO,CAAC;IAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdH,KAAK,CAAC,6CAA6C,CAAC;IACtD;EACF,CAAC;EAEDlB,SAAS,CAAC,MAAM;IACd;EAAA,CACD,EAAE,CAACO,UAAU,CAAC,CAAC;EAEhB,oBACEH,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAAkB,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BtB,OAAA;MAAQuB,OAAO,EAAEA,CAAA,KAAMjB,sBAAsB,CAAC,UAAU,CAAE;MAAAY,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACnFtB,OAAA;MAAQuB,OAAO,EAAEA,CAAA,KAAMjB,sBAAsB,CAAC,WAAW,CAAE;MAAAY,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClF,CAAC;AAEV,CAAC;AAACpB,EAAA,CAjCID,OAAO;EAAA,QACYJ,SAAS;AAAA;AAAA2B,EAAA,GAD5BvB,OAAO;AAmCb,eAAeA,OAAO;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}