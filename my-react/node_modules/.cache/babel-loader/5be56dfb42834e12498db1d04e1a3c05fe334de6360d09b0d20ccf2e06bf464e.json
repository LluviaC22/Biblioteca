{"ast":null,"code":"var _jsxFileName = \"C:\\\\Biblioteca P\\xFAblica\\\\my-react\\\\src\\\\components\\\\RestablecerContrasena.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RestablecerContrasena = () => {\n  _s();\n  const {\n    token\n  } = useParams(); // Obtener el token de la URL\n  const navigate = useNavigate(); // Para redirigir al usuario después de restablecer la contraseña\n\n  // Estados para el formulario\n  const [nuevaContrasena, setNuevaContrasena] = useState('');\n  const [isTokenValid, setIsTokenValid] = useState(false); // Estado para saber si el token es válido\n  const [error, setError] = useState(null); // Para manejar errores\n  const [isLoading, setIsLoading] = useState(false); // Para manejar el estado de carga\n\n  // Comprobar el token al cargar el componente\n  useEffect(() => {\n    axios.get(`http://localhost:8000/usuarios/restablecer/${token}`).then(response => {\n      console.log(response.data); // Verifica la respuesta del backend\n      if (response.data.isValid) {\n        setIsTokenValid(true);\n      } else {\n        setError('El token no es válido o ha expirado');\n      }\n    }).catch(() => {\n      setError('Error al verificar el token');\n    });\n  }, [token]);\n\n  // Función para manejar el envío del formulario\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!nuevaContrasena) {\n      setError('Por favor, ingresa una nueva contraseña.');\n      return;\n    }\n    setIsLoading(true);\n    axios.post(`http://localhost:8000/usuarios/restablecer/${token}`, {\n      nuevaContrasena\n    }).then(response => {\n      if (response.data.success) {\n        navigate('/login'); // Redirigir al login después de restablecer la contraseña\n      } else {\n        setError('Hubo un problema al restablecer la contraseña');\n      }\n    }).catch(() => {\n      setError('Error al restablecer la contraseña');\n    }).finally(() => {\n      setIsLoading(false);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isTokenValid ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"nuevaContrasena\",\n          children: \"Nueva Contrase\\xF1a\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"nuevaContrasena\",\n          value: nuevaContrasena,\n          onChange: e => setNuevaContrasena(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isLoading,\n        children: isLoading ? 'Actualizando...' : 'Actualizar Contraseña'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error || 'Cargando...'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(RestablecerContrasena, \"vaaN9XwnO/ZGgfKi17b+KuqIFf0=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = RestablecerContrasena;\nexport default RestablecerContrasena;\nvar _c;\n$RefreshReg$(_c, \"RestablecerContrasena\");","map":{"version":3,"names":["React","useEffect","useState","axios","useParams","useNavigate","jsxDEV","_jsxDEV","RestablecerContrasena","_s","token","navigate","nuevaContrasena","setNuevaContrasena","isTokenValid","setIsTokenValid","error","setError","isLoading","setIsLoading","get","then","response","console","log","data","isValid","catch","handleSubmit","e","preventDefault","post","success","finally","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","value","onChange","target","required","disabled","_c","$RefreshReg$"],"sources":["C:/Biblioteca Pública/my-react/src/components/RestablecerContrasena.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\n\r\nconst RestablecerContrasena = () => {\r\n  const { token } = useParams(); // Obtener el token de la URL\r\n  const navigate = useNavigate(); // Para redirigir al usuario después de restablecer la contraseña\r\n\r\n  // Estados para el formulario\r\n  const [nuevaContrasena, setNuevaContrasena] = useState('');\r\n  const [isTokenValid, setIsTokenValid] = useState(false); // Estado para saber si el token es válido\r\n  const [error, setError] = useState(null); // Para manejar errores\r\n  const [isLoading, setIsLoading] = useState(false); // Para manejar el estado de carga\r\n\r\n  // Comprobar el token al cargar el componente\r\n  useEffect(() => {\r\n    axios.get(`http://localhost:8000/usuarios/restablecer/${token}`)\r\n      .then(response => {\r\n        console.log(response.data); // Verifica la respuesta del backend\r\n        if (response.data.isValid) {\r\n          setIsTokenValid(true);\r\n        } else {\r\n          setError('El token no es válido o ha expirado');\r\n        }\r\n      })\r\n      .catch(() => {\r\n        setError('Error al verificar el token');\r\n      });\r\n  }, [token]);\r\n\r\n  // Función para manejar el envío del formulario\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!nuevaContrasena) {\r\n      setError('Por favor, ingresa una nueva contraseña.');\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n\r\n    axios.post(`http://localhost:8000/usuarios/restablecer/${token}`, { nuevaContrasena })\r\n      .then(response => {\r\n        if (response.data.success) {\r\n          navigate('/login'); // Redirigir al login después de restablecer la contraseña\r\n        } else {\r\n          setError('Hubo un problema al restablecer la contraseña');\r\n        }\r\n      })\r\n      .catch(() => {\r\n        setError('Error al restablecer la contraseña');\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {isTokenValid ? (\r\n        <form onSubmit={handleSubmit}>\r\n          <div>\r\n            <label htmlFor=\"nuevaContrasena\">Nueva Contraseña</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"nuevaContrasena\"\r\n              value={nuevaContrasena}\r\n              onChange={(e) => setNuevaContrasena(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <button type=\"submit\" disabled={isLoading}>\r\n            {isLoading ? 'Actualizando...' : 'Actualizar Contraseña'}\r\n          </button>\r\n        </form>\r\n      ) : (\r\n        <p>{error || 'Cargando...'}</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RestablecerContrasena;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}