{"ast":null,"code":"var _jsxFileName = \"C:\\\\Biblioteca P\\xFAblica\\\\my-react\\\\src\\\\components\\\\RestablecerContrasena.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { Modal, Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RestablecerContrasena = () => {\n  _s();\n  const {\n    token\n  } = useParams();\n  const navigate = useNavigate();\n  const [isTokenValid, setIsTokenValid] = useState(false);\n  const [nuevaContrasena, setNuevaContrasena] = useState('');\n  const [confirmarContrasena, setConfirmarContrasena] = useState('');\n  const [modalMessage, setModalMessage] = useState('');\n  const [modalVisible, setModalVisible] = useState(false);\n  const [isSuccess, setIsSuccess] = useState(false);\n\n  // Verificar el token al cargar el componente\n  useEffect(() => {\n    const verificarToken = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8000/usuarios/restablecer-contrasena/${token}`);\n        if (response.data.isValid) {\n          setIsTokenValid(true);\n        }\n      } catch (error) {\n        setModalMessage('El token no es válido o ha expirado');\n        setModalVisible(true);\n      }\n    };\n    verificarToken();\n  }, [token]);\n\n  // Manejar el envío del formulario\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (nuevaContrasena !== confirmarContrasena) {\n      setModalMessage('Las contraseñas no coinciden');\n      setModalVisible(true);\n      return;\n    }\n    try {\n      const response = await axios.put(`http://localhost:8000/usuarios/restablecer/${token}`, {\n        nuevaContrasena\n      });\n      setModalMessage(response.data.message);\n      setIsSuccess(true);\n      setModalVisible(true);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setModalMessage(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Error al actualizar la contraseña');\n      setModalVisible(true);\n    }\n  };\n\n  // Función para cerrar el modal\n  const closeModal = () => {\n    setModalVisible(false);\n    if (isSuccess) {\n      navigate('/login'); // Redirige al login después del éxito\n    }\n  };\n\n  // Si el token no es válido, mostrar un mensaje\n  if (!isTokenValid && !modalVisible) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mt-10 text-danger\",\n      children: \"Verificando token...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Restablecer Contrase\\xF1a\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Ingresa tu nueva contrase\\xF1a y conf\\xEDrmala para poder restablecer tu acceso. Aseg\\xFArate de que ambas contrase\\xF1as coincidan.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"nuevaContrasena\",\n          className: \"form-label\",\n          children: \"Nueva Contrase\\xF1a\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"nuevaContrasena\",\n          value: nuevaContrasena,\n          onChange: e => setNuevaContrasena(e.target.value),\n          className: \"form-control\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirmarContrasena\",\n          className: \"form-label\",\n          children: \"Confirmar Contrase\\xF1a\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"confirmarContrasena\",\n          value: confirmarContrasena,\n          onChange: e => setConfirmarContrasena(e.target.value),\n          className: \"form-control\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Restablecer Contrase\\xF1a\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: modalVisible,\n      onHide: closeModal,\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: isSuccess ? 'Éxito' : 'Error'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: modalMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: isSuccess ? 'success' : 'danger',\n          onClick: closeModal,\n          children: isSuccess ? 'Ir al Login' : 'Cerrar'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(RestablecerContrasena, \"cwu7Dj6qgj3UDEiHuG/1OKam64A=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = RestablecerContrasena;\nexport default RestablecerContrasena;\nvar _c;\n$RefreshReg$(_c, \"RestablecerContrasena\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","useNavigate","Modal","Button","jsxDEV","_jsxDEV","RestablecerContrasena","_s","token","navigate","isTokenValid","setIsTokenValid","nuevaContrasena","setNuevaContrasena","confirmarContrasena","setConfirmarContrasena","modalMessage","setModalMessage","modalVisible","setModalVisible","isSuccess","setIsSuccess","verificarToken","response","get","data","isValid","error","handleSubmit","e","preventDefault","put","message","_error$response","_error$response$data","closeModal","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","required","show","onHide","centered","Header","closeButton","Title","Body","Footer","variant","onClick","_c","$RefreshReg$"],"sources":["C:/Biblioteca Pública/my-react/src/components/RestablecerContrasena.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { Modal, Button } from 'react-bootstrap';\r\n\r\nconst RestablecerContrasena = () => {\r\n  const { token } = useParams();\r\n  const navigate = useNavigate();\r\n  const [isTokenValid, setIsTokenValid] = useState(false);\r\n  const [nuevaContrasena, setNuevaContrasena] = useState('');\r\n  const [confirmarContrasena, setConfirmarContrasena] = useState('');\r\n  const [modalMessage, setModalMessage] = useState('');\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [isSuccess, setIsSuccess] = useState(false);\r\n\r\n  // Verificar el token al cargar el componente\r\n  useEffect(() => {\r\n    const verificarToken = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:8000/usuarios/restablecer-contrasena/${token}`);\r\n        if (response.data.isValid) {\r\n          setIsTokenValid(true);\r\n        }\r\n      } catch (error) {\r\n        setModalMessage('El token no es válido o ha expirado');\r\n        setModalVisible(true);\r\n      }\r\n    };\r\n\r\n    verificarToken();\r\n  }, [token]);\r\n\r\n  // Manejar el envío del formulario\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (nuevaContrasena !== confirmarContrasena) {\r\n      setModalMessage('Las contraseñas no coinciden');\r\n      setModalVisible(true);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.put(\r\n        `http://localhost:8000/usuarios/restablecer/${token}`,\r\n        { nuevaContrasena }\r\n      );\r\n      setModalMessage(response.data.message);\r\n      setIsSuccess(true);\r\n      setModalVisible(true);\r\n    } catch (error) {\r\n      setModalMessage(error.response?.data?.message || 'Error al actualizar la contraseña');\r\n      setModalVisible(true);\r\n    }\r\n  };\r\n\r\n  // Función para cerrar el modal\r\n  const closeModal = () => {\r\n    setModalVisible(false);\r\n    if (isSuccess) {\r\n      navigate('/login'); // Redirige al login después del éxito\r\n    }\r\n  };\r\n\r\n  // Si el token no es válido, mostrar un mensaje\r\n  if (!isTokenValid && !modalVisible) {\r\n    return <div className=\"text-center mt-10 text-danger\">Verificando token...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h2>Restablecer Contraseña</h2>\r\n      <p>\r\n        Ingresa tu nueva contraseña y confírmala para poder restablecer tu acceso. Asegúrate de que ambas contraseñas coincidan.\r\n      </p>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"nuevaContrasena\" className=\"form-label\">Nueva Contraseña</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"nuevaContrasena\"\r\n            value={nuevaContrasena}\r\n            onChange={(e) => setNuevaContrasena(e.target.value)}\r\n            className=\"form-control\"\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"confirmarContrasena\" className=\"form-label\">Confirmar Contraseña</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"confirmarContrasena\"\r\n            value={confirmarContrasena}\r\n            onChange={(e) => setConfirmarContrasena(e.target.value)}\r\n            className=\"form-control\"\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">Restablecer Contraseña</button>\r\n      </form>\r\n\r\n      {/* Modal de React-Bootstrap */}\r\n      <Modal show={modalVisible} onHide={closeModal} centered>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{isSuccess ? 'Éxito' : 'Error'}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p>{modalMessage}</p>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant={isSuccess ? 'success' : 'danger'} onClick={closeModal}>\r\n            {isSuccess ? 'Ir al Login' : 'Cerrar'}\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RestablecerContrasena;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}