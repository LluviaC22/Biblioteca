{"ast":null,"code":"var _jsxFileName = \"C:\\\\Biblioteca P\\xFAblica\\\\my-react\\\\src\\\\components\\\\RestablecerContrasena.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RestablecerContrasena = () => {\n  _s();\n  const {\n    token\n  } = useParams(); // Obtener el token de los parámetros de la URL\n  const [isTokenValid, setIsTokenValid] = useState(false);\n  const [nuevaContrasena, setNuevaContrasena] = useState('');\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    axios.get(`http://localhost:8000/usuarios/restablecer-contrasena/${token}`).then(response => {\n      if (response.data.isValid) {\n        setIsTokenValid(true); // Si el token es válido, mostrar el formulario\n      } else {\n        setError('El token no es válido o ha expirado');\n      }\n    }).catch(() => {\n      setError('Error al verificar el token');\n    });\n  }, [token]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    setIsLoading(true);\n\n    // Enviar nueva contraseña al backend\n    axios.put(`http://localhost:8000/usuarios/restablecer/${token}`, {\n      nuevaContrasena\n    }).then(response => {\n      alert(response.data.message); // Mostrar mensaje de éxito\n    }).catch(err => {\n      setError('Error al actualizar la contraseña');\n    }).finally(() => {\n      setIsLoading(false);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isTokenValid ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"nuevaContrasena\",\n          children: \"Nueva Contrase\\xF1a\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"nuevaContrasena\",\n          value: nuevaContrasena,\n          onChange: e => setNuevaContrasena(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isLoading,\n        children: isLoading ? 'Actualizando...' : 'Actualizar Contraseña'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error || 'Cargando...'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(RestablecerContrasena, \"gFtI4BNVLhNlkYAUkY2QOmLl3M4=\", false, function () {\n  return [useParams];\n});\n_c = RestablecerContrasena;\nexport default RestablecerContrasena;\nvar _c;\n$RefreshReg$(_c, \"RestablecerContrasena\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","jsxDEV","_jsxDEV","RestablecerContrasena","_s","token","isTokenValid","setIsTokenValid","nuevaContrasena","setNuevaContrasena","error","setError","isLoading","setIsLoading","get","then","response","data","isValid","catch","handleSubmit","e","preventDefault","put","alert","message","err","finally","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","value","onChange","target","required","disabled","_c","$RefreshReg$"],"sources":["C:/Biblioteca Pública/my-react/src/components/RestablecerContrasena.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst RestablecerContrasena = () => {\r\n  const { token } = useParams();  // Obtener el token de los parámetros de la URL\r\n  const [isTokenValid, setIsTokenValid] = useState(false);\r\n  const [nuevaContrasena, setNuevaContrasena] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    axios.get(`http://localhost:8000/usuarios/restablecer-contrasena/${token}`)\r\n      .then(response => {\r\n        if (response.data.isValid) {\r\n          setIsTokenValid(true);  // Si el token es válido, mostrar el formulario\r\n        } else {\r\n          setError('El token no es válido o ha expirado');\r\n        }\r\n      })\r\n      .catch(() => {\r\n        setError('Error al verificar el token');\r\n      });\r\n  }, [token]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n\r\n    // Enviar nueva contraseña al backend\r\n    axios.put(`http://localhost:8000/usuarios/restablecer/${token}`, { nuevaContrasena })\r\n      .then(response => {\r\n        alert(response.data.message);  // Mostrar mensaje de éxito\r\n      })\r\n      .catch(err => {\r\n        setError('Error al actualizar la contraseña');\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {isTokenValid ? (\r\n        <form onSubmit={handleSubmit}>\r\n          <div>\r\n            <label htmlFor=\"nuevaContrasena\">Nueva Contraseña</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"nuevaContrasena\"\r\n              value={nuevaContrasena}\r\n              onChange={(e) => setNuevaContrasena(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <button type=\"submit\" disabled={isLoading}>\r\n            {isLoading ? 'Actualizando...' : 'Actualizar Contraseña'}\r\n          </button>\r\n        </form>\r\n      ) : (\r\n        <p>{error || 'Cargando...'}</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RestablecerContrasena;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}