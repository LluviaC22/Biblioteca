{"ast":null,"code":"var _jsxFileName = \"C:\\\\Biblioteca P\\xFAblica\\\\my-react\\\\src\\\\components\\\\Gestion.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Gestion = () => {\n  _s();\n  // Estado para manejar las reservas y los préstamos\n  const [reservas, setReservas] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  // Cargar las reservas y préstamos del backend\n  useEffect(() => {\n    const fetchReservas = async () => {\n      try {\n        const response = await axios.get('http://localhost:8000/reservas/${id_reserva}/estado', {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        setReservas(response.data.reservas);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error al cargar las reservas', error);\n        setLoading(false);\n      }\n    };\n    fetchReservas();\n  }, []);\n\n  // Función para actualizar el estado de la reserva\n  const handleActualizarEstado = async (id_reserva, nuevoEstado) => {\n    try {\n      const response = await axios.put(`http://localhost:8000/reservas/${id_reserva}/estado`, {\n        estado: nuevoEstado\n      }, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}` // Si usas autenticación JWT\n        }\n      });\n      alert(response.data.message);\n      // Actualizar la reserva en el estado local después de la actualización\n      setReservas(prevReservas => prevReservas.map(reserva => reserva.id === id_reserva ? {\n        ...reserva,\n        estado: nuevoEstado\n      } : reserva));\n    } catch (error) {\n      alert('Error al actualizar el estado de la reserva');\n    }\n  };\n\n  // Función para mostrar el estado de la reserva de forma amigable\n  const obtenerEstadoReserva = estado => {\n    switch (estado) {\n      case 'activo':\n        return 'En espera';\n      case 'completo':\n        return 'Completado';\n      case 'cancelado':\n        return 'Cancelado';\n      default:\n        return 'Desconocido';\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Cargando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gestion\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Gesti\\xF3n de Reservas y Pr\\xE9stamos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Nombre del Usuario\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Libro\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Estado de la Reserva\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Acciones\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: reservas.map(reserva => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: `${reserva.nombres} ${reserva.ap_paterno} ${reserva.ap_materno}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: reserva.libro.titulo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: obtenerEstadoReserva(reserva.estado)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: reserva.estado === 'activo' && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-success\",\n                onClick: () => handleActualizarEstado(reserva.id, 'completo'),\n                children: \"Completar Reserva\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-danger\",\n                onClick: () => handleActualizarEstado(reserva.id, 'cancelado'),\n                children: \"Cancelar Reserva\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 29\n          }, this)]\n        }, reserva.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n_s(Gestion, \"Gu4SZ0gbN/abnSnCD8pAXYqR/xw=\");\n_c = Gestion;\nexport default Gestion;\nvar _c;\n$RefreshReg$(_c, \"Gestion\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Gestion","_s","reservas","setReservas","loading","setLoading","fetchReservas","response","get","headers","Authorization","localStorage","getItem","data","error","console","handleActualizarEstado","id_reserva","nuevoEstado","put","estado","alert","message","prevReservas","map","reserva","id","obtenerEstadoReserva","children","fileName","_jsxFileName","lineNumber","columnNumber","className","nombres","ap_paterno","ap_materno","libro","titulo","onClick","_c","$RefreshReg$"],"sources":["C:/Biblioteca Pública/my-react/src/components/Gestion.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Gestion = () => {\r\n    // Estado para manejar las reservas y los préstamos\r\n    const [reservas, setReservas] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    // Cargar las reservas y préstamos del backend\r\n    useEffect(() => {\r\n        const fetchReservas = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:8000/reservas/${id_reserva}/estado', {\r\n                    headers: {\r\n                        Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n                    },\r\n                });\r\n                setReservas(response.data.reservas);\r\n                setLoading(false);\r\n            } catch (error) {\r\n                console.error('Error al cargar las reservas', error);\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchReservas();\r\n    }, []);\r\n\r\n    // Función para actualizar el estado de la reserva\r\n    const handleActualizarEstado = async (id_reserva, nuevoEstado) => {\r\n        try {\r\n            const response = await axios.put(\r\n                `http://localhost:8000/reservas/${id_reserva}/estado`,\r\n                { estado: nuevoEstado },\r\n                {\r\n                    headers: {\r\n                        Authorization: `Bearer ${localStorage.getItem('token')}`, // Si usas autenticación JWT\r\n                    },\r\n                }\r\n            );\r\n            alert(response.data.message);\r\n            // Actualizar la reserva en el estado local después de la actualización\r\n            setReservas((prevReservas) =>\r\n                prevReservas.map((reserva) =>\r\n                    reserva.id === id_reserva ? { ...reserva, estado: nuevoEstado } : reserva\r\n                )\r\n            );\r\n        } catch (error) {\r\n            alert('Error al actualizar el estado de la reserva');\r\n        }\r\n    };\r\n\r\n    // Función para mostrar el estado de la reserva de forma amigable\r\n    const obtenerEstadoReserva = (estado) => {\r\n        switch (estado) {\r\n            case 'activo':\r\n                return 'En espera';\r\n            case 'completo':\r\n                return 'Completado';\r\n            case 'cancelado':\r\n                return 'Cancelado';\r\n            default:\r\n                return 'Desconocido';\r\n        }\r\n    };\r\n\r\n    if (loading) {\r\n        return <div>Cargando...</div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"gestion\">\r\n            <h1>Gestión de Reservas y Préstamos</h1>\r\n\r\n            {/* Tabla de reservas y préstamos */}\r\n            <table className=\"table table-striped\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Nombre del Usuario</th>\r\n                        <th>Libro</th>\r\n                        <th>Estado de la Reserva</th>\r\n                        <th>Acciones</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {reservas.map((reserva) => (\r\n                        <tr key={reserva.id}>\r\n                            <td>{`${reserva.nombres} ${reserva.ap_paterno} ${reserva.ap_materno}`}</td>\r\n                            <td>{reserva.libro.titulo}</td>\r\n                            <td>{obtenerEstadoReserva(reserva.estado)}</td>\r\n                            <td>\r\n                                {/* Mostrar botones para actualizar el estado solo si está activo */}\r\n                                {reserva.estado === 'activo' && (\r\n                                    <>\r\n                                        <button\r\n                                            className=\"btn btn-success\"\r\n                                            onClick={() => handleActualizarEstado(reserva.id, 'completo')}\r\n                                        >\r\n                                            Completar Reserva\r\n                                        </button>\r\n                                        <button\r\n                                            className=\"btn btn-danger\"\r\n                                            onClick={() => handleActualizarEstado(reserva.id, 'cancelado')}\r\n                                        >\r\n                                            Cancelar Reserva\r\n                                        </button>\r\n                                    </>\r\n                                )}\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Gestion;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}