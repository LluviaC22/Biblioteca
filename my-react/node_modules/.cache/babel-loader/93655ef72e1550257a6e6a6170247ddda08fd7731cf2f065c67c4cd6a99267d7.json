{"ast":null,"code":"var _jsxFileName = \"C:\\\\Biblioteca P\\xFAblica\\\\my-react\\\\src\\\\ProtectedRoute.js\";\n// ProtectedRoute.js\nimport React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\n\n// Componente de ruta protegida\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  // Verificar si el usuario es administrador\n  const isAdmin = localStorage.getItem('isAdmin') === 'true';\n  return /*#__PURE__*/_jsxDEV(Route, {\n    ...rest,\n    render: props => isAdmin ? /*#__PURE__*/_jsxDEV(Component, {\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }, this) // Muestra el componente si el usuario es admin\n    : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }, this) // Redirige al home si no es admin\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Redirect","Route","jsxDEV","_jsxDEV","ProtectedRoute","component","Component","rest","isAdmin","localStorage","getItem","render","props","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["C:/Biblioteca PÃºblica/my-react/src/ProtectedRoute.js"],"sourcesContent":["// ProtectedRoute.js\r\nimport React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\n// Componente de ruta protegida\r\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\r\n  // Verificar si el usuario es administrador\r\n  const isAdmin = localStorage.getItem('isAdmin') === 'true';\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        isAdmin ? (\r\n          <Component {...props} /> // Muestra el componente si el usuario es admin\r\n        ) : (\r\n          <Redirect to=\"/\" /> // Redirige al home si no es admin\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,KAAK,QAAQ,kBAAkB;;AAElD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,cAAc,GAAGA,CAAC;EAAEC,SAAS,EAAEC,SAAS;EAAE,GAAGC;AAAK,CAAC,KAAK;EAC5D;EACA,MAAMC,OAAO,GAAGC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,KAAK,MAAM;EAE1D,oBACEP,OAAA,CAACF,KAAK;IAAA,GACAM,IAAI;IACRI,MAAM,EAAGC,KAAK,IACZJ,OAAO,gBACLL,OAAA,CAACG,SAAS;MAAA,GAAKM;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,CAAC;IAAA,eAEzBb,OAAA,CAACH,QAAQ;MAACiB,EAAE,EAAC;IAAG;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,CAAC;EAEvB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEN,CAAC;AAACE,EAAA,GAhBId,cAAc;AAkBpB,eAAeA,cAAc;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}