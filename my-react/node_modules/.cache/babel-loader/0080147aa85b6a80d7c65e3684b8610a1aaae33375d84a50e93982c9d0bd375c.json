{"ast":null,"code":"var _jsxFileName = \"C:\\\\Biblioteca P\\xFAblica\\\\my-react\\\\src\\\\components\\\\Restablecer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Restablecer = () => {\n  _s();\n  const {\n    token\n  } = useParams(); // Obtenemos el token de la URL\n  const history = useHistory(); // Para redirigir al usuario después de actualizar la contraseña\n  const [nuevaContrasena, setNuevaContrasena] = useState(''); // Estado para la nueva contraseña\n  const [mensaje, setMensaje] = useState(''); // Mensaje de éxito o error\n  const [error, setError] = useState(''); // Error si ocurre\n  const [isLoading, setIsLoading] = useState(false); // Para manejar el estado de carga\n\n  // Verificamos si el token es válido al acceder a la página\n  useEffect(() => {\n    axios.get(`http://localhost:8000/restablecer/${token}`).then(response => {\n      setMensaje(response.data.message); // Si es válido, mostramos un mensaje\n    }).catch(err => {\n      setError('Token no válido o expirado'); // Si no es válido, mostramos un error\n    });\n  }, [token]);\n\n  // Enviamos la nueva contraseña al backend cuando el usuario la ingresa\n  const handleSubmit = async e => {\n    e.preventDefault(); // Evitamos el comportamiento por defecto del formulario\n    setError(''); // Limpiamos el error previo\n    setIsLoading(true); // Iniciamos el estado de carga\n\n    try {\n      // Enviamos la nueva contraseña junto con el token para actualizar la contraseña en el backend\n      const response = await axios.post(`http://localhost:8000/actualizar/${token}`, {\n        nuevaContrasena\n      });\n      setMensaje(response.data.message); // Si todo sale bien, mostramos el mensaje de éxito\n\n      // Redirigimos al usuario al login después de unos segundos\n      setTimeout(() => {\n        history.push('/login');\n      }, 2000);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Error al actualizar la contraseña'); // En caso de error, mostramos el mensaje\n    } finally {\n      setIsLoading(false); // Detenemos el estado de carga\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"restablecer-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"restablecer-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Restablecer Contrase\\xF1a\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"restablecer-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"nuevaContrasena\",\n            children: \"Nueva Contrase\\xF1a:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"nuevaContrasena\",\n            placeholder: \"Ingrese su nueva contrase\\xF1a\",\n            value: nuevaContrasena,\n            onChange: e => setNuevaContrasena(e.target.value) // Actualizamos el estado con el valor ingresado\n            ,\n            className: \"form-control\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          disabled: isLoading,\n          children: isLoading ? 'Actualizando...' : 'Actualizar Contraseña'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), mensaje && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"message\",\n        style: {\n          color: 'green'\n        },\n        children: mensaje\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"message\",\n        style: {\n          color: 'red'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(Restablecer, \"1VFtDU4Dszr+q9iIHYtrbR6pu9E=\", false, function () {\n  return [useParams, useHistory];\n});\n_c = Restablecer;\nexport default Restablecer;\nvar _c;\n$RefreshReg$(_c, \"Restablecer\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","useHistory","jsxDEV","_jsxDEV","Restablecer","_s","token","history","nuevaContrasena","setNuevaContrasena","mensaje","setMensaje","error","setError","isLoading","setIsLoading","get","then","response","data","message","catch","err","handleSubmit","e","preventDefault","post","setTimeout","push","_err$response","_err$response$data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","placeholder","value","onChange","target","required","disabled","style","color","_c","$RefreshReg$"],"sources":["C:/Biblioteca Pública/my-react/src/components/Restablecer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\n\r\nconst Restablecer = () => {\r\n  const { token } = useParams();  // Obtenemos el token de la URL\r\n  const history = useHistory();  // Para redirigir al usuario después de actualizar la contraseña\r\n  const [nuevaContrasena, setNuevaContrasena] = useState('');  // Estado para la nueva contraseña\r\n  const [mensaje, setMensaje] = useState('');  // Mensaje de éxito o error\r\n  const [error, setError] = useState('');  // Error si ocurre\r\n  const [isLoading, setIsLoading] = useState(false);  // Para manejar el estado de carga\r\n\r\n  // Verificamos si el token es válido al acceder a la página\r\n  useEffect(() => {\r\n    axios.get(`http://localhost:8000/restablecer/${token}`)\r\n      .then((response) => {\r\n        setMensaje(response.data.message);  // Si es válido, mostramos un mensaje\r\n      })\r\n      .catch((err) => {\r\n        setError('Token no válido o expirado');  // Si no es válido, mostramos un error\r\n      });\r\n  }, [token]);\r\n\r\n  // Enviamos la nueva contraseña al backend cuando el usuario la ingresa\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();  // Evitamos el comportamiento por defecto del formulario\r\n    setError('');  // Limpiamos el error previo\r\n    setIsLoading(true);  // Iniciamos el estado de carga\r\n\r\n    try {\r\n      // Enviamos la nueva contraseña junto con el token para actualizar la contraseña en el backend\r\n      const response = await axios.post(`http://localhost:8000/actualizar/${token}`, { nuevaContrasena });\r\n      setMensaje(response.data.message);  // Si todo sale bien, mostramos el mensaje de éxito\r\n\r\n      // Redirigimos al usuario al login después de unos segundos\r\n      setTimeout(() => {\r\n        history.push('/login');\r\n      }, 2000);\r\n\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'Error al actualizar la contraseña');  // En caso de error, mostramos el mensaje\r\n    } finally {\r\n      setIsLoading(false);  // Detenemos el estado de carga\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"restablecer-wrapper\">\r\n      <div className=\"restablecer-container\">\r\n        <h2>Restablecer Contraseña</h2>\r\n        <form onSubmit={handleSubmit} className=\"restablecer-form\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"nuevaContrasena\">Nueva Contraseña:</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"nuevaContrasena\"\r\n              placeholder=\"Ingrese su nueva contraseña\"\r\n              value={nuevaContrasena}\r\n              onChange={(e) => setNuevaContrasena(e.target.value)}  // Actualizamos el estado con el valor ingresado\r\n              className=\"form-control\"\r\n              required\r\n            />\r\n          </div>\r\n          <button type=\"submit\" className=\"btn btn-primary\" disabled={isLoading}>\r\n            {isLoading ? 'Actualizando...' : 'Actualizar Contraseña'}\r\n          </button>\r\n        </form>\r\n        {mensaje && <p className=\"message\" style={{ color: 'green' }}>{mensaje}</p>}\r\n        {error && <p className=\"message\" style={{ color: 'red' }}>{error}</p>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Restablecer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}