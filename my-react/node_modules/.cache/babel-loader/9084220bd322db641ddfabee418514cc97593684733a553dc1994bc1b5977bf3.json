{"ast":null,"code":"var _jsxFileName = \"C:\\\\Biblioteca P\\xFAblica\\\\my-react\\\\src\\\\components\\\\RestablecerContrasena.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom'; // Cambié useHistory a useNavigate\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RestablecerContrasena = () => {\n  _s();\n  const {\n    token\n  } = useParams(); // Obtener el token de la URL\n  const navigate = useNavigate(); // Usar useNavigate en lugar de useHistory\n  const [nuevaContrasena, setNuevaContrasena] = useState('');\n  const [mensaje, setMensaje] = useState('');\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Verificar el token cuando el componente se monta\n  useEffect(() => {\n    axios.get(`http://localhost:8000/restablecer/${token}`).then(response => {\n      setMensaje(response.data.message); // Si el token es válido, mostramos un mensaje\n    }).catch(err => {\n      setError('El token no es válido o ha expirado'); // Si el token no es válido, mostramos un error\n    });\n  }, [token]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    setIsLoading(true);\n    try {\n      // Enviar el token y la nueva contraseña al backend\n      const response = await axios.post(`http://localhost:8000/actualizar/${token}`, {\n        nuevaContrasena\n      });\n      setMensaje(response.data.message); // Mostrar mensaje de éxito\n\n      // Redirigir al usuario al login después de un tiempo\n      setTimeout(() => {\n        navigate('/login'); // Redirigir usando navigate\n      }, 2000);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Error al actualizar la contraseña'); // Manejar errores\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"restablecer-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Restablecer Contrase\\xF1a\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this), mensaje && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: mensaje\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 19\n    }, this), !error && !mensaje && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Nueva Contrase\\xF1a\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: nuevaContrasena,\n          onChange: e => setNuevaContrasena(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isLoading,\n        children: isLoading ? 'Actualizando...' : 'Actualizar Contraseña'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(RestablecerContrasena, \"YAJVb/Gkf7pV1wHFaCZ9mW9cuzM=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = RestablecerContrasena;\nexport default RestablecerContrasena;\nvar _c;\n$RefreshReg$(_c, \"RestablecerContrasena\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","axios","jsxDEV","_jsxDEV","RestablecerContrasena","_s","token","navigate","nuevaContrasena","setNuevaContrasena","mensaje","setMensaje","error","setError","isLoading","setIsLoading","get","then","response","data","message","catch","err","handleSubmit","e","preventDefault","post","setTimeout","_err$response","_err$response$data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","disabled","_c","$RefreshReg$"],"sources":["C:/Biblioteca Pública/my-react/src/components/RestablecerContrasena.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom'; // Cambié useHistory a useNavigate\r\nimport axios from 'axios';\r\n\r\nconst RestablecerContrasena = () => {\r\n  const { token } = useParams(); // Obtener el token de la URL\r\n  const navigate = useNavigate(); // Usar useNavigate en lugar de useHistory\r\n  const [nuevaContrasena, setNuevaContrasena] = useState('');\r\n  const [mensaje, setMensaje] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  // Verificar el token cuando el componente se monta\r\n  useEffect(() => {\r\n    axios.get(`http://localhost:8000/restablecer/${token}`)\r\n      .then(response => {\r\n        setMensaje(response.data.message); // Si el token es válido, mostramos un mensaje\r\n      })\r\n      .catch(err => {\r\n        setError('El token no es válido o ha expirado'); // Si el token no es válido, mostramos un error\r\n      });\r\n  }, [token]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      // Enviar el token y la nueva contraseña al backend\r\n      const response = await axios.post(`http://localhost:8000/actualizar/${token}`, { nuevaContrasena });\r\n      setMensaje(response.data.message); // Mostrar mensaje de éxito\r\n\r\n      // Redirigir al usuario al login después de un tiempo\r\n      setTimeout(() => {\r\n        navigate('/login'); // Redirigir usando navigate\r\n      }, 2000);\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'Error al actualizar la contraseña'); // Manejar errores\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"restablecer-container\">\r\n      <h2>Restablecer Contraseña</h2>\r\n      \r\n      {error && <p>{error}</p>}\r\n      {mensaje && <p>{mensaje}</p>}\r\n\r\n      {!error && !mensaje && (\r\n        <form onSubmit={handleSubmit}>\r\n          <div>\r\n            <label>Nueva Contraseña</label>\r\n            <input\r\n              type=\"password\"\r\n              value={nuevaContrasena}\r\n              onChange={(e) => setNuevaContrasena(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <button type=\"submit\" disabled={isLoading}>\r\n            {isLoading ? 'Actualizando...' : 'Actualizar Contraseña'}\r\n          </button>\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RestablecerContrasena;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}