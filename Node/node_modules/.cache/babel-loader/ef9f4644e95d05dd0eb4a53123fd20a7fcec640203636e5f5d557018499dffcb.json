{"ast":null,"code":"var _jsxFileName = \"C:\\\\Biblioteca P\\xFAblica\\\\my-react\\\\src\\\\Login.js\",\n  _s = $RefreshSig$();\n// Componente de inicio de sesión\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [credentials, setCredentials] = useState({\n    email: '',\n    password: ''\n  });\n  const navigate = useNavigate();\n  const handleLogin = async e => {\n    e.preventDefault();\n    try {\n      // Realiza la llamada a la API para iniciar sesión\n      const response = await axios.post('http://localhost:8000/login', credentials);\n      localStorage.setItem('token', response.data.token); // Guarda el token\n\n      // Verifica si hay una acción almacenada\n      const reservaAction = localStorage.getItem('reservaAction');\n      if (reservaAction) {\n        const {\n          action,\n          id_libro\n        } = JSON.parse(reservaAction);\n        localStorage.removeItem('reservaAction'); // Limpia la acción almacenada\n\n        // Redirige al formulario de reserva\n        navigate(`/reservar/${id_libro}`);\n      } else {\n        navigate('/'); // Redirige a la página principal si no hay acción\n      }\n    } catch (error) {\n      console.error('Error de inicio de sesión:', error);\n      // Maneja errores de inicio de sesión\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Iniciar Sesi\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"JpN+E5QmWD9xflIDRJfLqFg35YI=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","axios","jsxDEV","_jsxDEV","Login","_s","credentials","setCredentials","email","password","navigate","handleLogin","e","preventDefault","response","post","localStorage","setItem","data","token","reservaAction","getItem","action","id_libro","JSON","parse","removeItem","error","console","children","onSubmit","type","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Biblioteca Pública/my-react/src/Login.js"],"sourcesContent":["// Componente de inicio de sesión\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst Login = () => {\r\n  const [credentials, setCredentials] = useState({ email: '', password: '' });\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      // Realiza la llamada a la API para iniciar sesión\r\n      const response = await axios.post('http://localhost:8000/login', credentials);\r\n      localStorage.setItem('token', response.data.token); // Guarda el token\r\n\r\n      // Verifica si hay una acción almacenada\r\n      const reservaAction = localStorage.getItem('reservaAction');\r\n      if (reservaAction) {\r\n        const { action, id_libro } = JSON.parse(reservaAction);\r\n        localStorage.removeItem('reservaAction'); // Limpia la acción almacenada\r\n\r\n        // Redirige al formulario de reserva\r\n        navigate(`/reservar/${id_libro}`);\r\n      } else {\r\n        navigate('/'); // Redirige a la página principal si no hay acción\r\n      }\r\n    } catch (error) {\r\n      console.error('Error de inicio de sesión:', error);\r\n      // Maneja errores de inicio de sesión\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Tu formulario de inicio de sesión */}\r\n      <form onSubmit={handleLogin}>\r\n        {/* Campos de entrada para email y contraseña */}\r\n        <button type=\"submit\">Iniciar Sesión</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC;IAAES,KAAK,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAG,CAAC,CAAC;EAC3E,MAAMC,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9B,MAAMW,WAAW,GAAG,MAAOC,CAAC,IAAK;IAC/BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,IAAI,CAAC,6BAA6B,EAAET,WAAW,CAAC;MAC7EU,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,QAAQ,CAACI,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC;;MAEpD;MACA,MAAMC,aAAa,GAAGJ,YAAY,CAACK,OAAO,CAAC,eAAe,CAAC;MAC3D,IAAID,aAAa,EAAE;QACjB,MAAM;UAAEE,MAAM;UAAEC;QAAS,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACL,aAAa,CAAC;QACtDJ,YAAY,CAACU,UAAU,CAAC,eAAe,CAAC,CAAC,CAAC;;QAE1C;QACAhB,QAAQ,CAAC,aAAaa,QAAQ,EAAE,CAAC;MACnC,CAAC,MAAM;QACLb,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;MACjB;IACF,CAAC,CAAC,OAAOiB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClD;IACF;EACF,CAAC;EAED,oBACExB,OAAA;IAAA0B,QAAA,eAEE1B,OAAA;MAAM2B,QAAQ,EAAEnB,WAAY;MAAAkB,QAAA,eAE1B1B,OAAA;QAAQ4B,IAAI,EAAC,QAAQ;QAAAF,QAAA,EAAC;MAAc;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAC9B,EAAA,CArCID,KAAK;EAAA,QAEQJ,WAAW;AAAA;AAAAoC,EAAA,GAFxBhC,KAAK;AAuCX,eAAeA,KAAK;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}