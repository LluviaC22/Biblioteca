{"ast":null,"code":"var _jsxFileName = \"C:\\\\Biblioteca P\\xFAblica\\\\my-react\\\\src\\\\Login.js\",\n  _s = $RefreshSig$();\n// Componente de inicio de sesión\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [credentials, setCredentials] = useState({\n    email: '',\n    password: ''\n  });\n  const navigate = useNavigate();\n  const handleLogin = async e => {\n    e.preventDefault();\n    // Tu lógica de inicio de sesión aquí...\n\n    if (inicioSesionExitoso) {\n      // Aquí guardas el token en localStorage\n      localStorage.setItem('token', token);\n\n      // Verifica si hay una acción almacenada\n      const reservaAction = localStorage.getItem('reservaAction');\n      if (reservaAction) {\n        const {\n          action,\n          id_libro\n        } = JSON.parse(reservaAction);\n        // Redirige al formulario de reserva\n        navigate(`/reservar/${id_libro}`);\n        // Limpia la acción almacenada\n        localStorage.removeItem('reservaAction');\n      } else {\n        // Redirige a la página principal o donde quieras\n        navigate('/');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Iniciar Sesi\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"JpN+E5QmWD9xflIDRJfLqFg35YI=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","axios","jsxDEV","_jsxDEV","Login","_s","credentials","setCredentials","email","password","navigate","handleLogin","e","preventDefault","inicioSesionExitoso","localStorage","setItem","token","reservaAction","getItem","action","id_libro","JSON","parse","removeItem","children","onSubmit","type","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Biblioteca Pública/my-react/src/Login.js"],"sourcesContent":["// Componente de inicio de sesión\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst Login = () => {\r\n  const [credentials, setCredentials] = useState({ email: '', password: '' });\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    // Tu lógica de inicio de sesión aquí...\r\n    \r\n    if (inicioSesionExitoso) {\r\n      // Aquí guardas el token en localStorage\r\n      localStorage.setItem('token', token);\r\n  \r\n      // Verifica si hay una acción almacenada\r\n      const reservaAction = localStorage.getItem('reservaAction');\r\n      if (reservaAction) {\r\n        const { action, id_libro } = JSON.parse(reservaAction);\r\n        // Redirige al formulario de reserva\r\n        navigate(`/reservar/${id_libro}`);\r\n        // Limpia la acción almacenada\r\n        localStorage.removeItem('reservaAction');\r\n      } else {\r\n        // Redirige a la página principal o donde quieras\r\n        navigate('/');\r\n      }\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <div>\r\n      {/* Tu formulario de inicio de sesión */}\r\n      <form onSubmit={handleLogin}>\r\n        {/* Campos de entrada para email y contraseña */}\r\n        <button type=\"submit\">Iniciar Sesión</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC;IAAES,KAAK,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAG,CAAC,CAAC;EAC3E,MAAMC,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9B,MAAMW,WAAW,GAAG,MAAOC,CAAC,IAAK;IAC/BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB;;IAEA,IAAIC,mBAAmB,EAAE;MACvB;MACAC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEC,KAAK,CAAC;;MAEpC;MACA,MAAMC,aAAa,GAAGH,YAAY,CAACI,OAAO,CAAC,eAAe,CAAC;MAC3D,IAAID,aAAa,EAAE;QACjB,MAAM;UAAEE,MAAM;UAAEC;QAAS,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACL,aAAa,CAAC;QACtD;QACAR,QAAQ,CAAC,aAAaW,QAAQ,EAAE,CAAC;QACjC;QACAN,YAAY,CAACS,UAAU,CAAC,eAAe,CAAC;MAC1C,CAAC,MAAM;QACL;QACAd,QAAQ,CAAC,GAAG,CAAC;MACf;IACF;EACF,CAAC;EAGD,oBACEP,OAAA;IAAAsB,QAAA,eAEEtB,OAAA;MAAMuB,QAAQ,EAAEf,WAAY;MAAAc,QAAA,eAE1BtB,OAAA;QAAQwB,IAAI,EAAC,QAAQ;QAAAF,QAAA,EAAC;MAAc;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAC1B,EAAA,CArCID,KAAK;EAAA,QAEQJ,WAAW;AAAA;AAAAgC,EAAA,GAFxB5B,KAAK;AAuCX,eAAeA,KAAK;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}